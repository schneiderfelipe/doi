#!/bin/bash
# The MIT License (MIT)
#
# Copyright (c) 2018--2020 Felipe Silveira de Souza Schneider
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#? url2bib 1.0
#?
#?   Convert Uniform Resource Locator (URL) to BibTeX.
#?   URLs are received and the corresponding BibTeX entries are output.
#?
#? Usage: url2bib url [url...]
#?
#?   -h  show this message
#?   -v  show version
#?
#? Examples:
#?
#?   $ url2bib https://github.com/schneiderfelipe/doi                                         # write to stdout
#?   $ url2bib https://github.com/schneiderfelipe/doi >> citations.bib                        # append to file
#?   $ url2bib https://github.com/schneiderfelipe/doi https://en.wikipedia.org/wiki/Brazilin  # get many URLs
#?
#? License:
#?
#?   url2bib and doi2bib <https://github.com/schneiderfelipe/doi>
#?   are licensed under the MIT License.

while getopts ":hv" opt "$@"; do
  case $opt in
    h) # help
      grep "^#?" "$0" | cut -c 4-
      exit 0
      ;;
    v) # version
      grep "^#? url2bib" "$0" | cut -c 4-
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

# recover $@
shift $((OPTIND - 1))

# we consider everything after the command a list of URLs.
for url in "$@"; do
  # we do some encoding as needed.
  url=${url//+/%2B}

  # https://unix.stackexchange.com/a/103253/211802
  title=$(wget -qO- "${url}" \
    | gawk -v IGNORECASE=1 -v RS='</title' 'RT{gsub(/.*<title[^>]*>/,"");print;exit}')

  # https://gist.github.com/oneohthree/f528c7ae1e701ad990e6
  slug=$(echo "${title}" | iconv -t ascii//TRANSLIT \
    | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr "[:upper:]" "[:lower:]")

  cat << eor
@misc{${slug},
  title = {${title}},
  howpublished = {\\url{${url}}},
  note = {Accessed: $(date +"%Y-%m-%d")}
}

eor
done
